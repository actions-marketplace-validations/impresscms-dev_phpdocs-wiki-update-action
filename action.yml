name: 'Update wiki with PHP project documentation'
description: 'Updates project wiki with automatic generated PHP project documentation'

branding:
  icon: book
  color: purple

inputs:
  wiki_github_update_token:
    description: GitHub token to use for updating project wiki
    required: false
    default: ${{ github.token }}
  wiki_github_update_user:
    description: GitHub username for whom this token belongs
    required: false
    default: ${{ github.actor }}
  engine:
    description: What documentation generator should be used
    required: false
    default: clean/phpdoc-md
  class_root_namespace:
    description: Root class namespace that should be used for documentation
    required: false
  include:
    description: Defines what classes should be included in generated documentation (supports glob style wildcards syntax; each line means one rule)
    required: false
    default: ''
  ignored_files:
    description: Defines files that can be ignored (supports glob rules)
    required: false
    default: ''
  prefix_lines:
    description: Lines that will be used to prefix generated wiki content
    required: false
    default: |
      ##### Notice: Wiki was automatic generated from project sources as project API documentation. Do not edit manually!
  setup_php:
    description: Automatically setups PHP for action (default)
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Setuping...
      run: bash "$GITHUB_ACTION_PATH/bin/setup.sh" "${{ inputs.engine }}"
      shell: bash

    - name: Installing PHP...
      uses: shivammathur/setup-php@2.19.1
      with:
        php-version: ${{ env.NEEDED_PHP_VERSION }}
        extensions: curl, gd, pdo_mysql, json, mbstring, pcre, session
        ini-values: post_max_size=256M
        coverage: none
        tools: composer:v2
      if: inputs.setup_php == 'true'

    - name: Running composer...
      run: composer install --no-scripts --no-plugins -n
      shell: bash
      if: inputs.setup_php == 'true'

    - name: Checkouting original wiki with needed branch...
      run: bash ${{ github.action_path }}/bin/checkout.sh "${{ inputs.wiki_github_update_token }}"
      shell: bash

    - name: Generating new documentation with clean/phpdoc-md...
      uses: impresscms-dev/generate-phpdocs-with-clean-phpdoc-md-action@v0.1.4
      with:
        class_root_namespace: ${{ inputs.class_root_namespace }}
        included_classes: ${{ inputs.include }}
        output_path: ${{ env.NEW_WIKI_CHECKOUT_PATH }}
      if: inputs.engine == 'clean/phpdoc-md'

    - name: Generating new documentation with evert/phpdoc-md...
      uses: impresscms-dev/generate-phpdocs-with-evert-phpdoc-md-action@v0.1.1
      with:
        ignored_files: ${{ inputs.ignored_files }}
        output_path: ${{ env.NEW_WIKI_CHECKOUT_PATH }}
      if: inputs.engine == 'evert/phpdoc-md'

    - name: Prefixing files...
      uses: impresscms-dev/prefix-or-suffix-text-files-action@v0.1
      with:
        path: ${{ env.NEW_WIKI_CHECKOUT_PATH }}
        text: ${{ inputs.prefix_lines }}
        suffix: false
      if: inputs.prefix_lines != ''

    - name: Flattering new documentation...
      uses: impresscms-dev/flattern-markdown-folder-structure-action@v0.2
      with:
        path: ${{ env.NEW_WIKI_CHECKOUT_PATH }}

    - name: Moving old .git data to new docs folder...
      run: mv "$OLD_WIKI_CHECKOUT_PATH"/.git "$NEW_WIKI_CHECKOUT_PATH/"
      shell: bash

    - name: Commit and push wiki changes...
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: ${{ github.event.commits[0].message }}
        file_pattern: "*.md"
        repository: ${{ env.NEW_WIKI_CHECKOUT_PATH }}
        skip_fetch: true
        skip_checkout: true
        branch: ${{ github.ref_name }}
        create_branch: true

    - name: Clearing temp paths...
      run: bash ${{ github.action_path }}/bin/clear_tmp_data.sh
      shell: bash